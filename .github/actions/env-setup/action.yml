name: "Setup environment"
description: "Checkout repo, setup Python and dependencies"
inputs:
  python-version:
    required: true
  setup-name:
    required: true
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4.1.6

    - uses: actions/setup-python@v5.0.0
      with:
        python-version: ${{ inputs.python-version }}

    - uses: ./.github/actions/set-pip-path-and-cache-key
    - uses: actions/cache@v4
      id: cache
      with:
        path: ${{ env.pip_user_site }}
        key: ${{ inputs.setup-name }}-${{ env.toml_ci_md5 }}
        lookup-only: true

    - name: pip-install (-e) PySDM and PySDM-examples
      if:  steps.cache.outputs.cache-hit != 'true' && (! startsWith( inputs.setup-name, 'unit-tests'))
      run: |
        python -m pip install -e .[nonunit-tests,CI_version_pins] -e ./examples[CI_version_pins]
        python -m pip install -r tests/devops_tests/requirements.txt
        python -c "import PySDM_examples"
      shell: bash

    - name: pip-install (-e) PySDM
      if:  steps.cache.outputs.cache-hit != 'true' && startsWith( inputs.setup-name, 'unit-tests')
      run: |
        python -m pip install -e .[unit-tests,CI_version_pins]
        python -m pip install -r tests/devops_tests/requirements.txt
        python <<EOF
        try:
            import PySDM_examples
            exit(1)
        except ImportError:
            exit(0)
        EOF
      shell: bash

    - uses: actions/cache/save@v4
      if: steps.cache.outputs.cache-hit != 'true'
      with:
        path: ${{ env.pip_user_site }}
        key: ${{ inputs.setup-name }}-${{ env.toml_ci_md5 }}

    - if: steps.cache.outputs.cache-hit == 'true'
      run: rm -rf $pip_user_site
      shell: bash
    - if: steps.cache.outputs.cache-hit == 'true'
      uses: actions/cache/restore@v4
      with:
        fail-on-cache-miss: true
        path: ${{ env.pip_user_site }}
        key: ${{ inputs.setup-name }}-${{ env.toml_ci_md5 }}